%start ParolLs
%title "Parol grammar"
%comment "Parol's own grammar enhanced with comment processing"
%user_type OwnedToken = crate::parol_ls_grammar::OwnedToken

%%

ParolLs
    : Prolog GrammarDefinition [ Comment ];

Prolog
    : StartDeclaration { Declaration } { ScannerState };

StartDeclaration
    : Comments "%start": OwnedToken Identifier Comments;

Declaration
    : "%title": OwnedToken String Comments
    | "%comment": OwnedToken String Comments
    | "%user_type": OwnedToken Identifier "=": OwnedToken UserTypeName Comments
    | ScannerDirectives;

ScannerDirectives
    : "%line_comment": OwnedToken TokenLiteral Comments
    | "%block_comment": OwnedToken TokenLiteral TokenLiteral Comments
    | "%auto_newline_off": OwnedToken Comments
    | "%auto_ws_off": OwnedToken Comments;

GrammarDefinition
    : "%%": OwnedToken Production { Production };

DoubleColon
    : "::": OwnedToken;

ProductionLHS
    : Comments Identifier Comments ":": OwnedToken;

Production
    : ProductionLHS Alternations ";": OwnedToken;

Alternations
    : Alternation { '|': OwnedToken Comments Alternation };

Alternation
    : { Factor Comments };

Factor
    : Group
    | Repeat
    | Optional
    | Symbol;

Symbol
    : NonTerminal
    | SimpleToken
    | TokenWithStates
    | ScannerSwitch;

TokenLiteral
    : String
    | LiteralString
    | Regex;

SimpleToken
    : TokenLiteral [ ASTControl ];

TokenWithStates
    : "<": OwnedToken StateList ">": OwnedToken TokenLiteral [ ASTControl ];

Group
    : '(': OwnedToken Alternations ')': OwnedToken;

Optional
    : '[': OwnedToken Alternations ']': OwnedToken;

Repeat
    : '{': OwnedToken Alternations '}': OwnedToken;

NonTerminal
    : Identifier [ ASTControl ];

Identifier
    : /[a-zA-Z_][a-zA-Z0-9_]*/: OwnedToken;

String
    : /"(\\.|[^\\])*?"/: OwnedToken;

LiteralString
    : /'(\\'|[^'])*?'/: OwnedToken;

ScannerState
    : "%scanner": OwnedToken Identifier '{': OwnedToken { ScannerDirectives } '}': OwnedToken;

StateList
    : Identifier { ",": OwnedToken Identifier };

ScannerSwitch
    : "%sc": OwnedToken '(': OwnedToken [ Identifier ] ')': OwnedToken
    | "%push": OwnedToken '(': OwnedToken Identifier ')': OwnedToken
    | "%pop": OwnedToken '(': OwnedToken ')': OwnedToken;

ASTControl
    : CutOperator
    | UserTypeDeclaration;

CutOperator
    : '^': OwnedToken;

UserTypeDeclaration
    : ":": OwnedToken UserTypeName;

UserTypeName
    : Identifier { DoubleColon Identifier };

Comment
    : LineComment
    | BlockComment;

Comments
    : { Comment };

LineComment
    : /\u{2f}\u{2f}.*(:?\r\n|\r|\n|$)/: OwnedToken
    ;

BlockComment
    : /(?ms)\u{2f}\u{2a}.*?\u{2a}\u{2f}(?-ms)/: OwnedToken;

Regex
    : /\u{2f}(\\.|[^\\])*?\u{2f}/: OwnedToken // \u{2f} is /
    ;

// End comment
